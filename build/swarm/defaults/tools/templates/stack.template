
services:

    ca:
        image: migasfree/ca:{{TAG}}
        environment:
            - TZ=Europe/Madrid
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        volumes:
            - migasfree-swarm:/mnt/cluster

        networks:
            - infra_network

    proxy:
        image: migasfree/proxy:{{TAG}}
        ports:
            - published: {{PORT_HTTP}}
              target: 80
              protocol: tcp
              mode: host
            - published: {{PORT_HTTPS}}
              target: 443
              protocol: tcp
              mode: host
        dns: 127.0.0.11
        environment:
            - TZ=Europe/Madrid
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - PORT_HTTPS={{PORT_HTTPS}}
            - MTLS={{MTLS}}
            - HTTPSMODE={{HTTPSMODE}}
            - PMS_ENABLED={{PMS_ENABLED}}
            - NETWORK_MNG={{NETWORK_MNG}}
            - GOOGLE_API_KEY={{GOOGLE_API_KEY}}  # TODO: improve token handling â€” avoid storing sensitive data in environment variables
        depends_on:
            - ca
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 0
            placement:
                constraints:
                    - node.role == manager
        secrets:
            - source: {{STACK}}_superadmin_name
            - source: {{STACK}}_superadmin_pass
            - source: swarm-credential

        volumes:
            - migasfree-swarm:/mnt/cluster
            - /var/run/docker.sock:/var/run/docker.sock:ro

        networks:
            - infra_network






#    s3:
#        # https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html
#        image: migasfree/s3:{{TAG}}
#        command: server /data --console-address ":9001"
#        deploy:
#            replicas: 1
#            restart_policy:
#                condition: on-failure
#                delay: 5s
#                max_attempts: 0
#                window: 180s
#            placement:
#                constraints:
#                    - node.labels.datashare == true
#        environment:
#            - TZ={{TZ}}
#            - STACK={{STACK}}
#            - FQDN={{FQDN}}
#            - MINIO_ROOT_USER_FILE=/run/secrets/{{STACK}}_superadmin_name
#            - MINIO_ROOT_PASSWORD_FILE=/run/secrets/{{STACK}}_superadmin_pass
#            - MINIO_USERNAME=migasfree
#            - MINIO_GROUPNAME=migasfree
#            - MINIO_SERVER_URL=http://datashare:9000
#
#            - MINIO_UID=890
#            - MINIO_GID=890
#
#        # 32000 necessary for plugin
#        ports:
#            - 32000:9000
#        secrets:
#            - source: {{STACK}}_superadmin_name
#            - source: {{STACK}}_superadmin_pass
#        volumes:
#            - {{DATASHARE_PATH}}:/data  # RAW S3
#
#        networks:
#            - {{STACK}}_network
#            - infra_network




    {% for PMS in PMS_ENABLED.split(",") %}
#{% set PMS_ = 'REPLICAS_' ~ PMS|replace("-", "_") %}
#{% set REPLICAS_PMS = context()[PMS_] if PMS_ in context() else REPLICAS_pms_others %}
{% include "pms.template" %}
    {% endfor %}

    public:
        image: migasfree/public:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
        deploy:
            replicas: {{REPLICAS_public}}
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        depends_on:
            - core
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/mnt/datashare
        networks:
            - {{STACK}}_network
            - infra_network

    console:
        image: migasfree/console:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}:{{PORT_HTTPS}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
        deploy:
            replicas: {{REPLICAS_console}}
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        depends_on:
            - core
        networks:
            - {{STACK}}_network
            - infra_network

    core:
        image: migasfree/core:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - POSTGRES_USER={{POSTGRES_USER}}
            - POSTGRES_HOST={{POSTGRES_HOST}}
            - POSTGRES_PORT={{POSTGRES_PORT}}
            - POSTGRES_DB={{POSTGRES_DB}}
            - REDIS_HOST={{REDIS_HOST}}
            - REDIS_PORT={{REDIS_PORT}}
            - REDIS_DB={{REDIS_DB}}
        deploy:
            replicas: {{REPLICAS_core}}
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        secrets:
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - database
            - datastore
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/mnt/datashare
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/ca-certificates:/usr/local/share/ca-certificates
        networks:
            - {{STACK}}_network
            - infra_network

    worker:
        image: migasfree/core:{{TAG}}
        hostname: '{{TASK}}'
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - POSTGRES_USER={{POSTGRES_USER}}
            - POSTGRES_HOST={{POSTGRES_HOST}}
            - POSTGRES_PORT={{POSTGRES_PORT}}
            - POSTGRES_DB={{POSTGRES_DB}}
            - REDIS_HOST={{REDIS_HOST}}
            - REDIS_PORT={{REDIS_PORT}}
            - REDIS_DB={{REDIS_DB}}
        deploy:
            replicas:  {{REPLICAS_worker}}
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        secrets:
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - public
        volumes:
            -  /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/mnt/datashare
        networks:
            - {{STACK}}_network
            - infra_network

    beat:
        image: migasfree/core:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - POSTGRES_USER={{POSTGRES_USER}}
            - POSTGRES_HOST={{POSTGRES_HOST}}
            - POSTGRES_PORT={{POSTGRES_PORT}}
            - POSTGRES_DB={{POSTGRES_DB}}
            - REDIS_HOST={{REDIS_HOST}}
            - REDIS_PORT={{REDIS_PORT}}
            - REDIS_DB={{REDIS_DB}}
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
        secrets:
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - core
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/mnt/datashare
        networks:
            - {{STACK}}_network
            - infra_network

    database:
        image: migasfree/database:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - POSTGRES_USER={{POSTGRES_USER}}
            - POSTGRES_PASSWORD_FILE=/run/secrets/{{STACK}}_superadmin_pass
            - POSTGRES_HOST={{POSTGRES_HOST}}
            - POSTGRES_PORT={{POSTGRES_PORT}}
            - POSTGRES_DB={{POSTGRES_DB}}
            - BACKUP_CRON='{{BACKUP_CRON}}'

        {% if PORT_DATABASE %}  #  Expose PostgreSQL port to external access from the Swarm cluster
        ports:
            - published: {{PORT_DATABASE}}
              target: {{POSTGRES_PORT}}
              protocol: tcp
              mode: host
        {% endif %}

        secrets:
            - source: {{STACK}}_superadmin_pass
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 0
                window: 180s
            placement:
                constraints:
                    - node.labels.database == true
#        depends_on:
#            - datashare
        volumes:
            - database:/var/lib/postgresql
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:{{DATASHARE_MOUNT_PATH}}
        networks:
            - {{STACK}}_network
            - infra_network

    datastore:
        image: migasfree/datastore:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - BACKUP_CRON='{{BACKUP_CRON}}'
        secrets:
            - source: {{STACK}}_superadmin_pass
        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
            placement:
                constraints:
                    - node.labels.datastore == true
        volumes:
            - datastore:/data
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:{{DATASHARE_MOUNT_PATH}}
        networks:
            - {{STACK}}_network
            - infra_network

#    swarm:
#        image: migasfree/swarm:{{TAG}}
#        environment:
#            - TZ={{TZ}}
#            - FQDN={{FQDN}}
#            - STACK={{STACK}}
#            - NODE={{NODE}}
#            - SERVICE={{SERVICE}}
#            - DATASHARE_SERVER={{DATASHARE_SERVER}}
#            - DATASHARE_PORT={{DATASHARE_PORT}}
#        secrets:
#            - source: {{STACK}}_superadmin_name
#            - source: {{STACK}}_superadmin_pass
#        volumes:
#            - /var/run/docker.sock:/var/run/docker.sock
#        networks:
#            - {{STACK}}_network
#            - infra_network
#        deploy:
#            mode: global



    database_console:
        image: migasfree/database_console:{{TAG}}
        environment:
            - TZ={{TZ}}
            - STACK={{STACK}}
            - FQDN={{FQDN}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
            - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/{{STACK}}_superadmin_pass
            - PGADMIN_LISTEN_PORT=5050
            - PGADMIN_LISTEN_ADDRESS=0.0.0.0
        deploy:
            replicas: {{REPLICAS_database_console}}
        secrets:
            - source: {{STACK}}_superadmin_pass
            - source: {{STACK}}_superadmin_name
        volumes:
#            - database_console:/var/lib/pgadmin
#            - datashare:{{DATASHARE_MOUNT_PATH}}
             - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/consoles/database:/var/lib/pgadmin
        depends_on:
            - database
        networks:
            - {{STACK}}_network
            - infra_network

    datastore_console:
        image: migasfree/datastore_console:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - RI_APP_FOLDER_ABSOLUTE_PATH={{DATASHARE_MOUNT_PATH}}/consoles/datastore
            - REDIS_HOST={{REDIS_HOST}}
            - REDIS_PORT={{REDIS_PORT}}
            - REDIS_DB={{REDIS_DB}}
        deploy:
            replicas: {{REPLICAS_datastore_console}}
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:{{DATASHARE_MOUNT_PATH}}
        secrets:
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - datastore
        networks:
            - {{STACK}}_network
            - infra_network

    datashare_console:
        image: migasfree/datashare_console:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH=/srv
            - DATASHARE_FS={{DATASHARE_FS}}
            - HTTPSMODE={{HTTPSMODE}}
        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
        volumes:
            - migasfree-swarm:/mnt/cluster
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/srv
        secrets:
            - source: {{STACK}}_superadmin_name
            - source: {{STACK}}_superadmin_pass
        networks:
            - {{STACK}}_network
            - infra_network

    worker_console:
        image: migasfree/worker_console:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
        deploy:
            replicas: {{REPLICAS_worker_console}}
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
        networks:
            - {{STACK}}_network
            - infra_network
        secrets:
            - source: {{STACK}}_superadmin_name
            - source: {{STACK}}_superadmin_pass

{% if GOOGLE_API_KEY %}
    assistant:
        image: migasfree/assistant:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - GOOGLE_API_KEY={{GOOGLE_API_KEY}}
            - OLLAMA_BASE_URL={{OLLAMA_BASE_URL}}
            - OPENWEBUI_BASE_URL=https://assistant-{{FQDN}}

            # Disables network connections for update checks and automatic model downloads.
            - OFFLINE_MODE=True

        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/consoles/assistant:/app/backend/data
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/ca-certificates:/usr/local/share/ca-certificates

        secrets:
            - source: {{STACK}}_superadmin_name
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - mcp-server
        networks:
            - {{STACK}}_network
            - infra_network


    mcp-server:
        image: migasfree/mcp-server:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - POSTGRES_USER={{POSTGRES_USER}}
            - POSTGRES_HOST={{POSTGRES_HOST}}
            - POSTGRES_PORT={{POSTGRES_PORT}}
            - POSTGRES_DB={{POSTGRES_DB}}
        secrets:
            - source: {{STACK}}_superadmin_name
            - source: {{STACK}}_superadmin_pass
        depends_on:
            - core
        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}:/mnt/datashare
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/ca-certificates:/usr/local/share/ca-certificates

        networks:
            - {{STACK}}_network
            - infra_network


{% endif %}

{% if HTTPSMODE == "auto" %}
    certbot:
        image: migasfree/certbot:{{TAG}}
        environment:
            - TZ={{TZ}}
            - FQDN={{FQDN}}
            - STACK={{STACK}}
            - HTTPSMODE={{HTTPSMODE}}
            - NODE={{NODE}}
            - SERVICE={{SERVICE}}
            - DATASHARE_MOUNT_PATH={{DATASHARE_MOUNT_PATH}}
        deploy:
            replicas: 1
            restart_policy:
                condition: any
                delay: 5s
                max_attempts: 0
                window: 180s
            placement:
                constraints:
                    - node.labels.datastore == true
        networks:
            - {{STACK}}_network
            - infra_network
        volumes:
            - /var/lib/docker/volumes/migasfree-swarm/_data/certificates/{{STACK}}/server:/etc/certificates
            - /var/lib/docker/volumes/migasfree-swarm/_data/datashares/{{STACK}}/ca-certificates:/usr/local/share/ca-certificates
{% endif %}


networks:
    {{STACK}}_network:
        external: true
    infra_network:
        external: true


secrets:
    swarm-credential:
        external: true

    {{STACK}}_superadmin_name:
        external: true
    {{STACK}}_superadmin_pass:
        external: true
    {{STACK}}_pms_pass:
        external: true


volumes:
    database:
        driver: local

    datastore:
        driver: local

    migasfree-swarm:
        external: true



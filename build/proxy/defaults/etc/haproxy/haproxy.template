global
    maxconn 4096
    maxpipes 1024
    log fd@2 local2
    # log 127.0.0.1 local0
    # log 127.0.0.1 local1 notice
    # tune.bufsize 32768  # workaround -> 414 Request-URI Too Large

    # Administrative port 9999
    stats socket tcp@:9999 level admin expose-fd listeners

    tune.ssl.default-dh-param 2048
    ssl-server-verify none

    master-worker

    # https://www.haproxy.com/blog/enabling-cors-in-haproxy
    tune.lua.bool-sample-conversion normal
    lua-load /etc/haproxy/cors.lua

    ssl-default-bind-options no-tls-tickets ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256


resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      10s
    hold refused    10s
    hold nx         10s
    hold timeout    10s
    hold valid      10s
    hold obsolete   10s

defaults
    log global
    mode http
    option forwardfor
    option httplog
    option dontlognull
    option http-keep-alive
    timeout connect 10s
    timeout client 2m
    timeout server 2m
    timeout tunnel 1h


http-errors myerrors
    # https://github.com/Jonathan-Rosewood/haproxy-custom-errors
    errorfile 502 /etc/haproxy/errors-custom/502.http
    errorfile 503 /etc/haproxy/errors-custom/503.http
    errorfile 401 /etc/haproxy/errors-custom/401.http
    errorfile 403 /etc/haproxy/errors-custom/403.http
    errorfile 404 /etc/haproxy/errors-custom/404.http
    errorfile 429 /etc/haproxy/errors-custom/429.http


userlist users_cluster
{{USERLIST_CLUSTER}}

userlist users_stack
{{USERLIST_STACK}}


listen stats
    # https://www.haproxy.com/blog/haproxy-on-docker-swarm-load-balancing-and-dns-service-discovery#haproxy-configuration
    bind *:8404 ssl crt /mnt/cluster/certificates/{{STACK}}/server/{{FQDN}}.pem
    acl auth_ok http_auth(users_cluster)
    stats http-request auth unless auth_ok
    mode http
    stats enable
    stats hide-version
    stats uri /stats
    stats refresh 30s
    stats admin if auth_ok
    stats show-node
    stats show-legends

frontend http
    bind *:80

{% if MTLS %}
    bind *:443 ssl crt /mnt/cluster/certificates/{{STACK}}/server/{{FQDN}}.pem ca-file /mnt/cluster/certificates/{{STACK}}/ca/ca.crt verify optional ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3 alpn h2,http/1.1 crl-file /mnt/cluster/certificates/{{STACK}}/crl.pem
{% else %}
    bind *:443 ssl crt /mnt/cluster/certificates/{{STACK}}/server/{{FQDN}}.pem
{% endif %}

    # redirects
    acl status_path path -i /status
    http-request redirect location /services/status code 301 if status_path

    acl network_mng src {{NETWORK_MNG}}

    http-request set-header X-Forwarded-For %[src]

    errorfiles myerrors
    http-response return  status 429  default-errorfiles  if { status 429 }
    http-response return  status 502  default-errorfiles  if { status 502 }
    http-response return  status 503  default-errorfiles  if { status 503 }
    http-response return  status 403  default-errorfiles  if { status 403 }
    http-response return  status 404  default-errorfiles  if { status 404 }

    http-request add-header X-Forwarded-Proto https

    # CORS (for error pages)
#    http-request lua.cors "GET,POST,PUT" "ws://{{FQDN}},http://{{FQDN}},https://{{FQDN}},https://database-{{FQDN}},https://datastore-{{FQDN}},https://datashare-{{FQDN}},https://worker-{{FQDN}},https://portainer-{{FQDN}}" "*"
    http-request lua.cors "GET,POST,PUT,OPTIONS" "http://{{FQDN}},https://{{FQDN}},https://database-{{FQDN}},https://datastore-{{FQDN}},https://datashare-{{FQDN}},https://worker-{{FQDN}},https://portainer-{{FQDN}},https://assistant-{{FQDN}},http://localhost:*" "*"
    http-response lua.cors



    # ROLES
    acl is_role_admin    ssl_c_s_dn -m reg "/OU=ADMINS/"
    acl is_role_computer ssl_c_s_dn -m reg "/OU=COMPUTERS/"

    # DEBUG is_role_admin
    #http-request set-var(txn.role_admin) str("1") if is_role_admin
    #http-request set-var(txn.role_admin) str("0") if !is_role_admin
    #log-format "role_admin=%[var(txn.role_admin)] %r"

    # Stats HAProxy
    acl is_stats path_beg /stats


    # ACL Certbot
    acl certbot path_beg /.well-known/acme-challenge/

    mode http
    # acl certificates_check url_beg /.well-known
    # use_backend certificates if certificates_check

    # DDOS
    http-request track-sc0 url32+src table per_ip_and_url_rates
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

    http-request set-var(txn.path) path  # for services_cache

    # WEBSOCKETS. Routing based on websocket protocol header
    acl hdr_connection_upgrade hdr(Connection) -i upgrade
    acl hdr_upgrade_websocket hdr(Upgrade) -i websocket

    acl url_core path_beg /api/ /rest-auth/ /token-auth-jwt/ /token-auth/ /token-refresh/ /alerts/
    acl url_core_mng path_beg /admin/ /docs/ /markdownx/ /graphql/

    # api v4 COMPATIBILITY
    acl url_core path_beg /get_key_repositories /get_properties /get_computer_info /repository-url-template
    http-request replace-path /admin/server/computer/(.*)/change /computers/results/\1    # migasfree-play 1.x


    # console
    # ========
    acl url_root path /
    acl url_empty path_len 0

    # public
    # ======
    acl url_public path_beg /public/ /static/ /pool/ /repo/  # (/repo = retrocompatibility)


    # CA
    # ==
    acl url_ca path_beg /ca/

    # services
    # ========

    acl url_services path /status
    acl url_services path /services/crl
    acl url_services_mtls path /services/mtls
    acl url_services path_beg /services
    acl url_services_static path_beg /services-static /favicon.ico

    acl is_GET method GET
    acl is_POST method POST
    acl is_PATCH method PATCH


    # external sources
    # ================
    acl url_src path_beg /src/
    acl url_packages path_end {{ extensions }}

    {% if PORT_HTTPS == 443 %}
        acl is_fqdn hdr(host) -i {{FQDN}}
        acl url_datashare_console hdr(host) -i datashare-{{FQDN}}
        acl url_datastore_console hdr(host) -i datastore-{{FQDN}}
        acl url_database_console hdr(host) -i database-{{FQDN}}
        acl url_worker_console  hdr(host) -i worker-{{FQDN}}
        acl url_assistant hdr(host) -i assistant-{{FQDN}}
        acl url_portainer_console  hdr(host) -i portainer-{{FQDN}}
    {% else %}
        acl is_fqdn hdr_reg(host) -i ^{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_datashare_console hdr_reg(host) -i ^datashare-{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_datastore_console hdr_reg(host) -i ^datastore-{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_database_console hdr_reg(host) -i ^database-{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_worker_console  hdr_reg(host) -i ^worker-{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_assistant hdr_reg(host) -i ^assistant-{{FQDN}}(:{{PORT_HTTPS}})?$
        acl url_portainer_console hdr_reg(host) -i ^portainer-{{FQDN}}(:{{PORT_HTTPS}})?$
    {% endif %}


{% if MTLS %}
    # mTLS certificate
    # ================
    acl client_cert_present ssl_c_used
    acl client_cert_verified ssl_c_verify 0


    # URL without mTLS
    # ----------------
    acl url_no_mTLS_get    path_beg /repo/ # Compatibility client v4
    acl url_no_mTLS_post   path     /api/  # Compatibility client v4


    # Certificates & tokens
    acl url_no_mTLS_get   path_beg /ca/static/
    acl url_no_mTLS_get   path_reg ^/ca/v1/[^/]+/admin/token/[a-f0-9]{64}$
    acl url_no_mTLS_post  path_reg ^/ca/v1/[^/]+/admin/token/[a-f0-9]{64}$
    acl url_no_mTLS_post  path_reg ^/ca/v1/[^/]+/admin$
    acl url_no_mTLS_get   path_reg ^/ca/v1/[^/]+/computer/token/[a-f0-9]{64}$
    acl url_no_mTLS_post  path_reg ^/ca/v1/[^/]+/computer/token/[a-f0-9]{64}$
    acl url_no_mTLS_post  path_reg ^/ca/v1/[^/]+/computer$
    acl url_no_mTLS_get   path_reg ^/ca/v1/[^/]+/crl$

    acl url_no_mTLS_get   path_beg /services-static/
    acl url_no_mTLS_get   path_beg /public/ /static/ /pool/ /src/
    acl url_no_mTLS_get   path_beg /get_key_repositories /get_properties /get_computer_info /repository-url-template

    # required for clients
    acl url_no_mTLS_get   path_beg /api/v1/public/
    acl url_no_mTLS_post  path_beg /api/v1/public/
    acl url_no_mTLS_get   path_beg /api/public/
    acl url_no_mTLS_post  path_beg /api/v1/safe/
    acl url_no_mTLS_get   path_beg /rest-auth/
    acl url_no_mTLS_get   path_beg /token-auth-jwt/
    acl url_no_mTLS_get   path_beg /token-auth/
    acl url_no_mTLS_get   path_beg /token-refresh/
    acl url_no_mTLS_get   path     /favicon.ico
    acl url_no_mTLS_get   path     /  # Checks if it is active


    # migasfree-play 5.0 -> https://github.com/migasfree/migasfree-play/blob/master/src/config/app.conf.js
    acl url_no_mTLS_get   path_reg ^/api/v1/token/catalog/apps/available/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/catalog/categories/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/computers/[^/]+/label/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/computers/[^/]+/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/computers/[^/]+/devices/$
    acl url_no_mTLS_patch path_reg ^/api/v1/token/computers/[^/]+/devices/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/devices/devices/available/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/devices/devices/[^/]+/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/devices/logical/$
    acl url_no_mTLS_patch path_reg ^/api/v1/token/devices/logical/[^/]+/$
    acl url_no_mTLS_get   path_reg ^/api/v1/token/attributes/$



    # Deny certifificate present and not verified
    http-request deny deny_status 403 if client_cert_present !client_cert_verified

    # Deny all except Urls without mTLS
    http-request deny deny_status 403 if is_GET   !url_no_mTLS_get   !client_cert_present
    http-request deny deny_status 403 if is_POST  !url_no_mTLS_post  !client_cert_present
    http-request deny deny_status 403 if is_PATCH !url_no_mTLS_patch !client_cert_present
    http-request deny deny_status 403 if !is_GET !is_POST !is_PATCH  !client_cert_present

    # Deny Administrative Console to users no admins
    http-request deny deny_status 403 if is_GET   !url_no_mTLS_get   !is_role_admin
    http-request deny deny_status 403 if is_POST  !url_no_mTLS_post  !is_role_admin
    http-request deny deny_status 403 if is_PATCH !url_no_mTLS_patch !is_role_admin
    http-request deny deny_status 403 if !is_GET !is_POST !is_PATCH  !is_role_admin


{% endif %}



    # USE BACKENDS SECTION
    # Warning: The order is important !!!
    # ===================================


    use_backend ca if network_mng url_ca

{% if certbot %}
    use_backend mf_certbot if certbot
{% endif %}
    use_backend datastore_console if network_mng url_datastore_console
    use_backend database_console if network_mng url_database_console
    use_backend datashare_console if network_mng url_datashare_console
    use_backend worker_console if network_mng url_worker_console
    use_backend assistant if network_mng url_assistant

    use_backend portainer_console if network_mng url_portainer_console
    use_backend mf_console if network_mng url_root or url_empty

    use_backend mf_core if url_core || hdr_connection_upgrade || hdr_upgrade_websocket
    use_backend mf_core if network_mng url_core_mng

    use_backend services if network_mng is_GET url_services || url_services_static
    use_backend services if network_mng url_services_mtls

    use_backend mf_public if url_public || url_packages || url_src

    use_backend stats if is_fqdn is_stats network_mng

    use_backend mf_console if network_mng


backend ca
    mode http
    balance leastconn
        server-template ca- 1 ca:80 resolvers docker check init-addr none


{% if certbot %}
backend mf_certbot
    mode http
    balance leastconn
        server-template cerbot- 1 cerbot:380 resolvers docker check init-addr none
{% endif %}


backend mf_public
    mode http
    balance leastconn
        server-template public- 10 tasks.public:80 resolvers docker check init-addr none
        #server 127.0.0.1 127.0.0.1:8001 backup


backend mf_core
    mode http
    balance leastconn
    # For SWAGGER and REST-FRAMEWORK. It is also necessary "SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')" in settings.py
    http-request add-header X-Forwarded-Proto https
    cookie SRVNAME insert
        server-template core- 20 tasks.core:8080 resolvers docker check init-addr none


backend mf_console
    mode http
    balance leastconn
    option tcp-check
        server-template console- 2 tasks.console:80 resolvers docker check init-addr none


#backend s3  # MINIO
#    mode http
#        server-template s3_console- 1 s3_console:9001 resolvers docker check init-addr none


backend database_console  # PGADMIN
    mode http
    balance leastconn
        server-template database_console- 1 database_console:5050 resolvers docker check init-addr none


backend datastore_console  # REDISINSIGHT
    mode http
    balance leastconn
    acl auth_ok http_auth(users_stack)
    http-request auth realm datastore_console_realm if !auth_ok
        server-template datastore_console- 1 datastore_console:5540 resolvers docker check init-addr none


backend datashare_console  # migasfree/datashare_console (filebrowser)
    mode http
    balance leastconn
        server-template datashare_console- 1 datashare_console:80 resolvers docker check init-addr none


backend portainer_console  # PORTAINER
    mode http
    balance leastconn
        server-template portainer- 1 portainer:9000 resolvers docker check init-addr none


backend worker_console  # Celery Flower
    acl auth_ok http_auth(users_stack)
    http-request auth realm worker_console_realm if !auth_ok
    mode http
    balance leastconn
        server-template worker_console- 1 worker_console:5555 resolvers docker check init-addr none


backend assistant
    mode http
    balance leastconn
        server-template assistant- 1 assistant:8080 resolvers docker check init-addr none


backend services
    mode http
    acl url_services_cache var(txn.path) -m beg /services-static /favicon.ico
    acl url_status var(txn.path) -m beg /services/status
    balance leastconn
    http-response set-header Cache-Control public,max-age=604800,immutable if url_services_cache || url_status
    server 127.0.0.1 127.0.0.1:8001


backend per_ip_and_url_rates
    stick-table type binary len 8 size 1m expire 10m store http_req_rate(10s)
